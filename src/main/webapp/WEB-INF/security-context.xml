<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

<!-- enable Method level authorization  This work for APPLICATION Level scanned components
      Does NOT recognize WEB level - need to place enable line in Dispatcher-servlet-->
	<security:global-method-security pre-post-annotations="enabled"/>	
		
<!-- security:http enables security filter mechanism...name space configuration is activated -->
<!-- use-expressions enables URL level authorization -->
	<security:http use-expressions="true">
	
	<!--security:access-denied-handler error-page="/error-forbidden" /-->
	
	<!-- Implemented with Web based URL - METHOD level authorization -->
	<!-- the more specific rules need to come first, followed by the more general ones. -->
	  <security:intercept-url pattern="/customers/list" access="hasRole('ROLE_ADMIN')" />
	  <security:intercept-url pattern="/orders/changeOrderStatus" access="hasRole('ROLE_ADMIN')" />  	
	  <security:intercept-url pattern="/service/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"  />
	   <security:intercept-url pattern="/orders/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"  />
 	
		<!-- always-use-default-target overrides where login was triggered -->
		<!-- logout-url renames j_security_logout URL -->

		<security:form-login login-page="/login" 
               default-target-url="/"    
               always-use-default-target="true"   
               authentication-failure-url="/loginfailed"/>
        <security:logout logout-success-url="/logout" />
		<!-- BY DEFAULT the URL /j_spring_security_logout triggers logout 
				logout-url= "/doLogout" REPLACES it -->
	</security:http>
	

	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select username,password,enabled from users where username=?"
				authorities-by-username-query="select username, authority from users where username =?" />
		</security:authentication-provider>
	</security:authentication-manager>


	<!--security:authentication-manager>
		<security:authentication-provider>
			< security:user-service>
				<security:user name="admin" password="admin" authorities="ROLE_ADMIN" />
				<security:user name="guest" password="guest" authorities="ROLE_USER" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager-->
</beans>
